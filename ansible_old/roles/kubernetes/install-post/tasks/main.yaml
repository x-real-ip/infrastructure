---
- name: Create Kubernetes namespaces
  kubernetes.core.k8s:
    name: "{{ item }}"
    api_version: v1
    kind: Namespace
    state: present
  loop: "{{ kubernetes_namespaces }}"
  run_once: true

- name: Deploy and validate kube-vip
  ansible.builtin.include_tasks: "primary-resources/kube-vip.yaml"
  when: apiserver_endpoint and flannel_iface and kube_vip_tag_version is defined

- name: Deploy and validate resources to the k3s cluster and remove the used temp files afterwards
  block:
    - name: Create a directory if it does not exist
      ansible.builtin.file:
        path: "{{ temp_dir }}"
        state: directory
        owner: root
        group: root
        mode: "0644"

    - name: Deploy and validate resources to the k3s cluster
      ansible.builtin.include_tasks: "primary-resources/{{ item.name }}.yaml"
      loop_control:
        label: "{{ item.name }}"
      with_items:
        - name: "metallb"
          source: "github"
          namespace: "metallb-system"
        - name: "bitnami-sealed-secrets"
          source: "github"
          namespace: "kube-system"
        - name: "democratic-csi-manual"
          source: "github"
          namespace: "democratic-csi"
        - name: "tls-wildcard-k8s-lan"
          source: "github"
        - name: "tls-wildcard-theautomation-nl"
          source: "github"
        - name: "nginx-ingress-prd-int"
          source: "github"
          namespace: "prd-int"
        - name: "nginx-ingress-prd-ext"
          source: "github"
          namespace: "prd-ext"
        - name: "harbor-secrets-registry-creds"
          source: "github"
        - name: "harbor"
          source: "github"
          namespace: "devops"
        - name: "drone-pipeline-secrets"
          source: "github"
          namespace: "devops"
        - name: "drone"
          source: "github"
          namespace: "devops"
        - name: "feature-discovery"
          source: "github"
          namespace: "devops"
      run_once: true
  always:
    - name: Delete temp content & directory
      ansible.builtin.file:
        state: absent
        path: "{{ temp_dir }}/"

- name: Get contents of manifests folder
  ansible.builtin.find:
    paths: /var/lib/rancher/k3s/server/manifests
    file_type: file
  register: k3s_server_manifests

- name: Get sub dirs of manifests folder
  ansible.builtin.find:
    paths: /var/lib/rancher/k3s/server/manifests
    file_type: directory
  register: k3s_server_manifests_directories

- name: Remove manifests and folders that are only needed for bootstrapping cluster so k3s doesn't auto apply on start
  ansible.builtin.file:
    path: "{{ item.path }}"
    state: absent
  with_items:
    - "{{ k3s_server_manifests.files }}"
    - "{{ k3s_server_manifests_directories.files }}"
  loop_control:
    label: "{{ item.path }}"

- name: Copy config file to the home directory of this local device
  ansible.builtin.fetch:
    src: "{{ ansible_user_dir }}/.kube/config"
    dest: "~/.kube/config"
    flat: true
  run_once: true
