---
kind: PersistentVolume
apiVersion: v1
metadata:
  name: jellyfin-config-pv
  labels:
    app: jellyfin
spec:
  storageClassName: nfs
  capacity:
    storage: 1Gi
  accessModes:
    - ReadWriteMany
  nfs:
    server: storage-server.lan
    path: "/r10_8tb/services/jellyfin/config"
  mountOptions:
    - nfsvers=4.0
    - hard

---
kind: PersistentVolume
apiVersion: v1
metadata:
  name: jellyfin-data-pv
  labels:
    app: jellyfin
spec:
  storageClassName: nfs
  capacity:
    storage: 200Gi
  accessModes:
    - ReadWriteMany
  nfs:
    server: storage-server.lan
    path: "/r10_8tb/downloads/media"
  mountOptions:
    - nfsvers=4.0
    - hard

---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: jellyfin-config-pvc
  namespace: prd-int
  labels:
    app: jellyfin
spec:
  storageClassName: nfs
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 1Gi

---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: jellyfin-data-pvc
  namespace: prd-int
  labels:
    app: jellyfin
spec:
  storageClassName: nfs
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 200Gi

---
kind: Deployment
apiVersion: apps/v1
metadata:
  name: jellyfin
  namespace: prd-int
  labels:
    app: jellyfin
spec:
  strategy:
    type: Recreate
  replicas: 1
  selector:
    matchLabels:
      app: jellyfin
  template:
    metadata:
      labels:
        app: jellyfin
    spec:
      containers:
        - name: jellyfin
          image: jellyfin/jellyfin:latest
          imagePullPolicy: IfNotPresent
          ports:
            - name: http
              containerPort: 8096
              protocol: TCP
          livenessProbe:
            tcpSocket:
              port: http
          readinessProbe:
            tcpSocket:
              port: http
          volumeMounts:
            - name: config
              mountPath: /config
            - name: data
              mountPath: /media
      volumes:
        - name: config
          persistentVolumeClaim:
            claimName: jellyfin-config-pvc
        - name: data
          persistentVolumeClaim:
            claimName: jellyfin-data-pvc

---
kind: Service
apiVersion: v1
metadata:
  name: jellyfin
  namespace: prd-int
  labels:
    app: jellyfin
spec:
  selector:
    app: jellyfin
  type: ClusterIP
  ports:
    - name: http
      port: 8096
      protocol: TCP
      targetPort: http

---
kind: Ingress
apiVersion: networking.k8s.io/v1
metadata:
  name: jellyfin
  namespace: prd-int
  annotations:
    nginx.ingress.kubernetes.io/force-ssl-redirect: "false"
    nginx.ingress.kubernetes.io/ssl-redirect: "false"
  labels:
    app: jellyfin
spec:
  ingressClassName: nginx-private
  rules:
    - host: jellyfin.k8s.lan
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: jellyfin
                port:
                  name: http
